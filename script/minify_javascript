#!/usr/bin/env ruby

require "digest/md5"
require "config/environment.rb"
require "tempfile"
require "find"

$jsdir='public/javascripts/'
$jslib="vendor/plugins/jsext/lib"

# paths to jsmin script
$jsmin = File.dirname(__FILE__)+"/../vendor/plugins/deployment/lib/jsmin.rb"

main_libs = [
  "#{$jsdir}/mootools.js", 
  "#{$jslib}/util.mootools.js",
  "#{$jslib}/util.js",
  "#{$jsdir}/util.breadcrumbs.js",
  "#{$jslib}/forms.js"
]

project_libs = [
  "#{$jslib}/util.dombuilder.js",
  "#{$jsdir}/page.js",
  "#{$jsdir}/displayHelper.js",
  "#{$jsdir}/tableDisplay.js",
  "#{$jsdir}/graphing.js",
  "#{$jsdir}/plotr/EnumArray.js",
  "#{$jsdir}/plotr/plotrMootoolsSupport.js",
  "#{$jsdir}/plotr/Plotr_uncompressed.js",
]

def minify_javascript( libs, basename )

    # first delete all other versions of the minified javascript file
    Find.find("#{File.dirname(__FILE__)}/../#{$jsdir}") do |file|
      unless FileTest.directory?(file)
        if File.basename(file) =~ /^#{basename}/
          File.delete(file)
          puts "deleted #{File.basename(file)}"
        end
      end
    end

    # create single tmp js file
    tmp = Tempfile.open('all')
    libs.each {|lib| open(lib) {|f| tmp.write(f.read) } }
    tmp.rewind

    digest = Digest::MD5.hexdigest(tmp.read)

    filename = "#{File.dirname(__FILE__)}/../#{$jsdir}#{basename}.#{digest}"

    # minify file
    %x[ruby #{$jsmin} < #{tmp.path} > #{filename}]

    puts "Compressed javascript into file #{$jsdir}#{filename}"

end

minify_javascript( main_libs, "main_min.js" )
minify_javascript( project_libs, "project_min.js" )

